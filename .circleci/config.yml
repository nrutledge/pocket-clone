# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  lint:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    working_directory: ~/pocket-clone
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: npm install
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # run tests!
      - run:
          name: npm run lint
          command: npm run lint
  deploy-public-staging:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/pocket-clone
    steps:
      - checkout
      - run: (cd src/public ; git init)
      - run: (cd src/public ; git config --global user.email "neilrutledgephoto@gmail.com")
      - run: (cd src/public ; git config --global user.name  "neil")
      - run: (cd src/public ; git status)
      - run: (cd src/public ; ls)
      - run: (cd src/public ; git add .)
      - run: (cd src/public ; git commit -m "DEEPLOY!!!!1")
      - run: (cd src/public ; git remote add heroku https://heroku:$HEROKU_TOKEN@git.heroku.com/$CLIENT_STAGING_GIT)
      - run: (cd src/public ; git push heroku master)
      - run: rm -rf ./src/public
      - run: git add .
      - run: git commit -m "UNLEASH THE KRAKEN"
      - run: git remote add heroku https://heroku:$HEROKU_TOKEN@git.heroku.com/$SERVER_STAGING_GIT
      - run: git push heroku master
workflows:
  version: 2
  default:
    jobs:
      - lint
      - deploy-public-staging:
          requires:
            - lint
          filters:
            branches:
              only: master
